{"version":3,"file":"index.js","mappings":"mFAmBA,SAASA,EAAkBC,GACzB,MAAO,IAAIA,EAAKC,SAAS,aAAaC,IAAIC,GAASA,EAAM,GAAGC,cAC9D,CAYA,SAASC,EAAoBC,EAAeC,GAC1C,MAAO,IAAID,EAAML,SAAS,aACvBC,IAAIC,GAASA,EAAM,IACnBK,KAAKC,GACJA,EACGC,MAAM,KACNR,IAAIS,GAAOA,EAAIP,eACfQ,MAAMC,GAAYN,EAAKO,SAASD,IAEzC,CA2GA,IAAIE,GAAyB,EAW7B,MAAMC,EAAwBC,EAAEC,SAVhCC,iBACE,MAAMZ,EA/HCU,EAAEG,WACPH,EAAEI,OAAO,IACJtB,EArBAuB,EAAE,2BAA2BC,KAAK,aAAaC,WAI/CF,EAAE,eACNC,KAAK,aACLE,UACAvB,IAAIwB,GAAQJ,EAAEI,GAAMF,QAeeG,QAAQ5B,MACvCA,EAZAuB,EAAE,wBAAwBC,KAAK,YAAYC,YA4BpDL,eAA4CZ,GAC1C,MAAMqB,EAASC,UAAU,UAEnBC,EAAaC,gBAAgBH,GACnCE,EAAWE,QACRC,OAAOC,GAAyC,OAA/BA,EAAOlC,KAAKG,MAAM,UACnCgC,QAAQD,IACPA,EAAOE,QAAU/B,EAAoB6B,EAAOlC,KAAMO,KAGlDU,EAAEoB,QAAQT,EAAQE,UAGhBQ,cAAc,SAAUR,EAChC,CA8FES,CAA6BhC,GA5F/BY,eAAqCZ,GACnC,MAAMiC,EAAUC,iBAAiB,CAAEC,MAAO,QAEpCC,EAAcZ,gBAAgBS,GACpCG,EACGV,OAAOW,GAA8C,OAArCA,EAAMC,YAAY1C,MAAM,UACxCgC,QAAQS,IACPA,EAAMR,QAAU/B,EAAoBuC,EAAMC,YAAatC,KAGvDU,EAAEoB,QAAQG,EAASG,UAGjBG,qBAAqBH,EAAa,CAAED,MAAO,OACnD,CA+EEK,CAAsBxC,GAClBQ,EA3CNI,eAAqCZ,GAEnC,MAaMyC,EAbU1B,EAAE,sCACfC,KAAK,oBACLU,OAAO,WACN,OAKwB,OAJtBX,EAAE2B,MACCC,SAAS,OACTC,QACA3B,OACArB,MAAM,QAEb,GACCsB,UAGAvB,IAAIkD,IACH,MACMC,EADU/B,EAAE8B,GACIF,SAAS,OAGzBI,EAAiBjD,EADTgD,EAAMF,QAAQ3B,OACsBjB,GAE5CgD,EAAiBF,EAAMG,OAAON,SAAS,OAAOC,QAC9CM,EAAaF,EAAeG,SAAS,WAC3C,MAAO,CACLC,OAAQJ,EACRK,cAAeN,IAAmBG,KAGrCxB,OAAO,EAAG2B,mBAAoBA,GAC9B1D,IAAI,EAAGyD,YAAaA,GAEvB,IAAK,MAAMP,KAAUJ,EACnBI,EAAOS,QAAQ,QAEnB,CAQIC,CAAsBvD,GA/E1BY,eAA8CZ,GAC5C,MAYMyC,EAZU1B,EAAE,4BACfC,KAAK,gBACLU,OAAO,WACN,OAIwB,OAHtBX,EAAE2B,MACC1B,KAAK,qBACLC,OACArB,MAAM,QAEb,GACCsB,UAGAvB,IAAIkD,IACH,MAAMW,EAAOzC,EAAE8B,GAGTE,EAAiBjD,EADT0D,EAAKxC,KAAK,qBAAqBC,OACKjB,GAE5CgD,EAAiBQ,EAAKxC,KAAK,kBAC3BkC,EAAaF,EAAeG,SAAS,WAC3C,MAAO,CACLC,OAAQJ,EACRK,cAAeN,IAAmBG,KAGrCxB,OAAO,EAAG2B,mBAAoBA,GAC9B1D,IAAI,EAAGyD,YAAaA,GAEvB,IAAK,MAAMP,KAAUJ,EACnBI,EAAOS,QAAQ,QAEnB,CAgDIG,CAA+BzD,EAEnC,EACsD,IAAM,CAAE0D,UAAU,IAExE3C,EAAEH,UACA,MAAM+C,QAAgBC,yBACtBpD,EAAyB,EAAQmD,EAAS,QAAS,MACnDlD,IACAoD,eAAeC,cAAcC,iBAAkBtD","sources":["src://tavern_helper_template/src/酒馆助手/标签化/index.ts"],"sourcesContent":["import { compare } from 'compare-versions';\n\nexport {};\n\nfunction get_current_preset_name(): string {\n  return $('#settings_preset_openai').find(':selected').text();\n}\n\nfunction get_current_global_lorebooks(): string[] {\n  return $('#world_info')\n    .find(':selected')\n    .toArray()\n    .map(node => $(node).text());\n}\n\nfunction get_current_connection_profile(): string {\n  return $('#connection_profiles').find(':checked').text();\n}\n\nfunction extract_tags_from(name: string): string[] {\n  return [...name.matchAll(/【(.*?)】/g)].map(match => match[1].toLowerCase());\n}\n\nfunction extract_control_tags(): string[] {\n  return _.sortedUniq(\n    _.sortBy([\n      ...extract_tags_from(get_current_preset_name()),\n      ...get_current_global_lorebooks().flatMap(extract_tags_from),\n      ...extract_tags_from(get_current_connection_profile()),\n    ]),\n  );\n}\n\nfunction check_should_enable(title: string, tags: string[]): boolean {\n  return [...title.matchAll(/【(.*?)】/g)]\n    .map(match => match[1])\n    .some(tag_list =>\n      tag_list\n        .split('&')\n        .map(tag => tag.toLowerCase())\n        .every(expected => tags.includes(expected)),\n    );\n}\n\nasync function toggle_tagged_preset_prompts(tags: string[]) {\n  const preset = getPreset('in_use');\n\n  const new_preset = structuredClone(preset);\n  new_preset.prompts\n    .filter(prompt => prompt.name.match(/【.*?】/) !== null)\n    .forEach(prompt => {\n      prompt.enabled = check_should_enable(prompt.name, tags);\n    });\n\n  if (_.isEqual(preset, new_preset)) {\n    return;\n  }\n  await replacePreset('in_use', new_preset);\n}\n\nasync function toggle_tagged_regexes(tags: string[]) {\n  const regexes = getTavernRegexes({ scope: 'all' });\n\n  const new_regexes = structuredClone(regexes);\n  new_regexes\n    .filter(regex => regex.script_name.match(/【.*?】/) !== null)\n    .forEach(regex => {\n      regex.enabled = check_should_enable(regex.script_name, tags);\n    });\n\n  if (_.isEqual(regexes, new_regexes)) {\n    return;\n  }\n  await replaceTavernRegexes(new_regexes, { scope: 'all' });\n}\n\nasync function toggle_tagged_scripts_backward(tags: string[]) {\n  const scripts = $('#script-settings-content')\n    .find('.script-item')\n    .filter(function () {\n      return (\n        $(this)\n          .find('.script-item-name')\n          .text()\n          .match(/【.*?】/) !== null\n      );\n    })\n    .toArray();\n\n  const scripts_to_be_toggled = scripts\n    .map(script => {\n      const $div = $(script);\n\n      const title = $div.find('.script-item-name').text();\n      const should_enabled = check_should_enable(title, tags);\n\n      const $toggle_button = $div.find('.script-toggle');\n      const is_enabled = $toggle_button.hasClass('enabled');\n      return {\n        button: $toggle_button,\n        should_toggle: should_enabled !== is_enabled,\n      };\n    })\n    .filter(({ should_toggle }) => should_toggle)\n    .map(({ button }) => button);\n\n  for (const script of scripts_to_be_toggled) {\n    script.trigger('click');\n  }\n}\n\nasync function toggle_tagged_scripts(tags: string[]) {\n  // TODO: 4.0 正式合并后移除 #tavern_helper_new\n  const scripts = $('#tavern_helper, #tavern_helper_new')\n    .find('[data-script-id]')\n    .filter(function () {\n      return (\n        $(this)\n          .children('div')\n          .first()\n          .text()\n          .match(/【.*?】/) !== null\n      );\n    })\n    .toArray();\n\n  const scripts_to_be_toggled = scripts\n    .map(script => {\n      const $script = $(script);\n      const $divs = $script.children('div');\n\n      const title = $divs.first().text();\n      const should_enabled = check_should_enable(title, tags);\n\n      const $toggle_button = $divs.last().children('div').first();\n      const is_enabled = $toggle_button.hasClass('enabled');\n      return {\n        button: $toggle_button,\n        should_toggle: should_enabled !== is_enabled,\n      };\n    })\n    .filter(({ should_toggle }) => should_toggle)\n    .map(({ button }) => button);\n\n  for (const script of scripts_to_be_toggled) {\n    script.trigger('click');\n  }\n}\n\nlet version_greater_than_4 = false;\nasync function toggle_tags(): Promise<void> {\n  const tags = extract_control_tags();\n  toggle_tagged_preset_prompts(tags);\n  toggle_tagged_regexes(tags);\n  if (version_greater_than_4) {\n    toggle_tagged_scripts(tags);\n  } else {\n    toggle_tagged_scripts_backward(tags);\n  }\n}\nconst toggle_tags_throttled = _.throttle(toggle_tags, 1000, { trailing: false });\n\n$(async () => {\n  const version = await getTavernHelperVersion();\n  version_greater_than_4 = compare(version, '4.0.0', '>=');\n  toggle_tags_throttled();\n  eventMakeFirst(tavern_events.SETTINGS_UPDATED, toggle_tags_throttled);\n});\n"],"names":["extract_tags_from","name","matchAll","map","match","toLowerCase","check_should_enable","title","tags","some","tag_list","split","tag","every","expected","includes","version_greater_than_4","toggle_tags_throttled","_","throttle","async","sortedUniq","sortBy","$","find","text","toArray","node","flatMap","preset","getPreset","new_preset","structuredClone","prompts","filter","prompt","forEach","enabled","isEqual","replacePreset","toggle_tagged_preset_prompts","regexes","getTavernRegexes","scope","new_regexes","regex","script_name","replaceTavernRegexes","toggle_tagged_regexes","scripts_to_be_toggled","this","children","first","script","$divs","should_enabled","$toggle_button","last","is_enabled","hasClass","button","should_toggle","trigger","toggle_tagged_scripts","$div","toggle_tagged_scripts_backward","trailing","version","getTavernHelperVersion","eventMakeFirst","tavern_events","SETTINGS_UPDATED"],"sourceRoot":""}