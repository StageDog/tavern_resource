{"version":3,"file":"index.js","mappings":"iEAAO,SAASA,EAAwBC,GAEtC,MAAMC,EAAgCC,EAAE,iCACpCD,EAA8BE,OAAS,GAAKF,EAA8BG,KAAK,cAAgBJ,GACjGC,EAA8BG,KAAK,WAAYJ,GAAQ,GAAGK,cAAc,IAAIC,MAAM,UAIpF,MAAMC,EAAqBL,EAAE,yCACzBK,EAAmBJ,OAAS,GAAKI,EAAmBH,KAAK,cAAgBJ,GAC3EO,EAAmBC,QAAQ,SAG7B,MAAMC,EAAcP,EAAE,eAClBO,EAAYN,OAAS,GAAKM,EAAYL,KAAK,aAAeJ,GAC5DS,EAAYL,KAAK,UAAWJ,GAAQ,GAAGK,cAAc,IAAIC,MAAM,SAEnE,CCdAJ,EAAE,MC2BKQ,eAA0BC,GAC/B,MAAMC,QAAeC,MAAMF,GAC3B,IAAKC,EAAOE,GACV,OAAO,EAET,MAAMC,QAAoBH,EAAOI,OACjCC,kBAAkBF,EAEpB,CDlCEG,CACE,+FAEFnB,GAAwB,GAExBoB,QAAQC,eAAe,iBAAkB,KACvCrB,GAAwB,KAE1BoB,QAAQC,eAAe,iBAAkB,KACvCrB,GAAwB,KAG1B,MAAMsB,EAA2BC,EAAEC,SACjC,KACE,MAAMC,EAAUC,mBAChB,IAAIC,EACJ,MAAMC,EAAkBH,EAAQI,KAC9BF,GAA0B,kBAAhBA,EAAOG,MAA4C,kBAAhBH,EAAOG,MAEjDF,EAIHD,EAASC,GAHTD,EAAS,CAAEG,KAAM,gBAAiBC,SAAS,GAC3CN,EAAQO,KAAKL,IAKf,MAAMM,EAAc9B,EAAE,wEAAwEE,KAAK,WAE/F4B,KADkC,kBAAhBN,EAAOG,QAK3BH,EAAOG,KADLG,EACY,gBAEA,gBAEhBC,qBAAqBT,KAEvB,IACA,CAAEU,UAAU,IAEdf,QAAQgB,cAAcC,iBAAkBf,GACxCA,MAEFnB,EAAEmC,QAAQC,GAAG,WAAY,IAAMvC,GAAwB","sources":["src://tavern_helper_template/src/酒馆助手/禁用酒馆助手宏和提示词模板/toggle.ts","src://tavern_helper_template/src/酒馆助手/禁用酒馆助手宏和提示词模板/index.ts","src://tavern_helper_template/src/util.ts"],"sourcesContent":["export function toggleExtensionSettings(enable: boolean) {\n  // 酒馆助手 3.0\n  const $macro_replace_disable_toggle = $('#macro-replace-disable-toggle');\n  if ($macro_replace_disable_toggle.length > 0 && $macro_replace_disable_toggle.prop('checked') !== !enable) {\n    $macro_replace_disable_toggle.prop('checked', !enable)[0].dispatchEvent(new Event('click'));\n  }\n\n  // 酒馆助手 4.0\n  const $TH_macro_disabled = $('#TH-macro-enabled, #TH-macro-disabled');\n  if ($TH_macro_disabled.length > 0 && $TH_macro_disabled.prop('checked') !== !enable) {\n    $TH_macro_disabled.trigger('click');\n  }\n\n  const $pt_enabled = $('#pt_enabled');\n  if ($pt_enabled.length > 0 && $pt_enabled.prop('checked') !== enable) {\n    $pt_enabled.prop('checked', enable)[0].dispatchEvent(new Event('click'));\n  }\n}\n","import { loadReadme } from '../../util';\nimport { toggleExtensionSettings } from './toggle';\n\n$(() => {\n  loadReadme(\n    'https://testingcf.jsdelivr.net/gh/StageDog/tavern_resource/src/酒馆助手/禁用酒馆助手宏和提示词模板/README.md',\n  );\n  toggleExtensionSettings(false);\n\n  eventOn(getButtonEvent('禁用酒馆助手宏和提示词模板'), () => {\n    toggleExtensionSettings(false);\n  });\n  eventOn(getButtonEvent('启用酒馆助手宏和提示词模板'), () => {\n    toggleExtensionSettings(true);\n  });\n\n  const checkStatusAndSetButtons = _.throttle(\n    () => {\n      const buttons = getScriptButtons();\n      let button: ScriptButton;\n      const possible_button = buttons.find(\n        button => button.name === '启用酒馆助手宏和提示词模板' || button.name === '禁用酒馆助手宏和提示词模板',\n      );\n      if (!possible_button) {\n        button = { name: '启用酒馆助手宏和提示词模板', visible: true };\n        buttons.push(button);\n      } else {\n        button = possible_button;\n      }\n\n      const is_disabled = $('#macro-replace-disable-toggle, #TH-macro-enabled, #TH-macro-disabled').prop('checked');\n      const should_enable = button.name === '启用酒馆助手宏和提示词模板';\n      if (is_disabled === should_enable) {\n        return;\n      }\n      if (is_disabled) {\n        button.name = '启用酒馆助手宏和提示词模板';\n      } else {\n        button.name = '禁用酒馆助手宏和提示词模板';\n      }\n      replaceScriptButtons(buttons);\n    },\n    1000,\n    { trailing: false },\n  );\n  eventOn(tavern_events.SETTINGS_UPDATED, checkStatusAndSetButtons);\n  checkStatusAndSetButtons();\n});\n$(window).on('pagehide', () => toggleExtensionSettings(true));\n","import { compare } from 'compare-versions';\n\nexport function assignInplace<T>(destination: T[], new_array: T[]): T[] {\n  destination.length = 0;\n  destination.push(...new_array);\n  return destination;\n}\n\nexport function chunkBy<T>(array: T[], predicate: (lhs: T, rhs: T) => boolean): T[][] {\n  if (array.length === 0) {\n    return [];\n  }\n\n  const chunks: T[][] = [[array[0]]];\n  for (const [lhs, rhs] of _.zip(_.dropRight(array), _.drop(array))) {\n    if (predicate(lhs!, rhs!)) {\n      chunks[chunks.length - 1].push(rhs!);\n    } else {\n      chunks.push([rhs!]);\n    }\n  }\n  return chunks;\n}\n\nexport async function checkMinimumVersion(expected: string, title: string) {\n  if (compare(await getTavernHelperVersion(), expected, '<')) {\n    toastr.error(`'${title}' 需要酒馆助手版本 >= '${expected}'`, '版本不兼容');\n  }\n}\n\nexport async function loadReadme(url: string): Promise<boolean> {\n  const readme = await fetch(url);\n  if (!readme.ok) {\n    return false;\n  }\n  const readme_text = await readme.text();\n  replaceScriptInfo(readme_text);\n  return true;\n}\n\nexport function teleportStyle() {\n  if ($(`head > div[script_id=\"${getScriptId()}\"]`).length > 0) {\n    return;\n  }\n  const $div = $(`<div>`).attr('script_id', getScriptId()).append($(`head > style`, document).clone());\n  $('head').append($div);\n}\n\nexport function deteleportStyle() {\n  $(`head > div[script_id=\"${getScriptId()}\"]`).remove();\n}\n\nexport function createScriptIdDiv(): JQuery<HTMLDivElement> {\n  return $('<div>').attr('script_id', getScriptId()) as JQuery<HTMLDivElement>;\n}\n\nexport function destroyScriptIdDiv(): void {\n  $(`div[script_id=\"${getScriptId()}\"]`).remove();\n}\n"],"names":["toggleExtensionSettings","enable","$macro_replace_disable_toggle","$","length","prop","dispatchEvent","Event","$TH_macro_disabled","trigger","$pt_enabled","async","url","readme","fetch","ok","readme_text","text","replaceScriptInfo","loadReadme","eventOn","getButtonEvent","checkStatusAndSetButtons","_","throttle","buttons","getScriptButtons","button","possible_button","find","name","visible","push","is_disabled","replaceScriptButtons","trailing","tavern_events","SETTINGS_UPDATED","window","on"],"sourceRoot":""}