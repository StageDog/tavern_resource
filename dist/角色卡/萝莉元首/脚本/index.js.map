{"version":3,"file":"index.js","mappings":"AAuDAA,EAAEC,UACAC,QAAQC,cAAcC,aAAcH,MAAMI,IACrB,IAAfA,GAzDRJ,iBACE,MAAMK,EAAWC,mBAAmBC,QACpC,IAAKF,EAEH,YADAG,OAAOC,MAAM,gBAIf,MAAMC,EAA4D,CAChE,MAAO,CACL,aAAcC,EAAEC,OAAO,GAAI,IAC3B,YAAaD,EAAEC,OAAO,GAAI,IAC1B,gBAAiB,EACjB,aAAcD,EAAEC,OAAO,GAAI,IAC3B,aAAcD,EAAEC,OAAO,GAAI,IAC3B,cAAeD,EAAEC,OAAO,EAAG,IAC3B,cAAe,EACf,aAAcD,EAAEC,OAAO,GAAI,IAC3B,aAAcD,EAAEC,OAAO,EAAG,KAE5B,MAAO,CACL,aAAcD,EAAEC,OAAO,EAAG,IAC1B,YAAaD,EAAEC,OAAO,GAAI,IAC1B,gBAAiBD,EAAEC,OAAO,EAAG,IAC7B,aAAcD,EAAEC,OAAO,GAAI,IAC3B,aAAcD,EAAEC,OAAO,GAAI,IAC3B,cAAeD,EAAEC,OAAO,EAAG,KAC3B,cAAeD,EAAEC,OAAO,EAAG,IAC3B,aAAc,EACd,aAAcD,EAAEC,OAAO,GAAI,MAIzBC,QAAcC,mBAAmBT,GAAUU,KAAKC,GACpDA,EACGC,OAAOC,GAASA,EAAMC,QAAQC,SAAS,YAAcF,EAAMG,SAC3DC,IAAIJ,GAASA,EAAMC,QAAQI,QAAQ,UAAW,MAE7CC,EAAyCb,EAAEc,UAC/C,CAAC,KACEZ,EAAMS,IAAIJ,GAASP,EAAEe,UAAUhB,EAAkBQ,GAAQ,CAAC,IAC7D,CAACS,EAAsBC,IACdjB,EAAEkB,OAAO,CAACF,EAAcC,KAInC,IAAIE,EAAUC,gBAAgB,GAAG,GAAGD,QACpCA,EAAUA,EAAQP,QAChB,0CACAS,OAAOhB,QAAQQ,GACZF,IAAI,EAAEW,EAAKC,KAAW,MAAMD,KAAOC,MACnCC,KAAK,IAAM,YAEVC,gBAAgB,CAAC,CAAEhC,WAAY,EAAG0B,YAAY,CAAEO,QAAS,YACjE,CAKMC","sources":["src://tavern_helper_template/src/角色卡/萝莉元首/脚本/index.ts"],"sourcesContent":["async function initialize_based_on_user_role(): Promise<void> {\n  const lorebook = getCharLorebooks().primary;\n  if (!lorebook) {\n    toastr.error('请导入本角色卡的世界书!');\n    return;\n  }\n\n  const default_variables: Record<string, Record<string, number>> = {\n    元首派医生: {\n      '变量.艾莉卡.好感度': _.random(20, 50),\n      '变量.艾琳.好感度': _.random(30, 70),\n      '变量.安娜斯塔西娅.好感度': 0,\n      '变量.海尔嘉.好感度': _.random(10, 60),\n      '变量.莫妮卡.好感度': _.random(20, 30),\n      '变量.维多利亚.好感度': _.random(0, 40),\n      '变量.伊丽莎白.好感度': 0,\n      '变量.伊琳娜.好感度': _.random(10, 30),\n      '变量.伊薇特.好感度': _.random(0, 20),\n    },\n    蛇之眼高层: {\n      '变量.艾莉卡.好感度': _.random(0, 50),\n      '变量.艾琳.好感度': _.random(10, 40),\n      '变量.安娜斯塔西娅.好感度': _.random(0, 20),\n      '变量.海尔嘉.好感度': _.random(20, 50),\n      '变量.莫妮卡.好感度': _.random(40, 60),\n      '变量.维多利亚.好感度': _.random(0, 100),\n      '变量.伊丽莎白.好感度': _.random(0, 50),\n      '变量.伊琳娜.好感度': 0,\n      '变量.伊薇特.好感度': _.random(40, 80),\n    },\n  };\n\n  const roles = await getLorebookEntries(lorebook).then(entries =>\n    entries\n      .filter(entry => entry.comment.includes('user身份是') && entry.enabled)\n      .map(entry => entry.comment.replace('user身份是', '')),\n  );\n  const initialization: Record<string, number> = _.mergeWith(\n    {},\n    ...roles.map(entry => _.defaultTo(default_variables[entry], {})),\n    (object_value: number, source_value: number) => {\n      return _.sample([object_value, source_value]);\n    },\n  );\n\n  let message = getChatMessages(0)[0].message;\n  message = message.replace(\n    /(?<=\\|初始化变量\\|)(\\s*)(?=<UpdateVariable>)/,\n    Object.entries(initialization)\n      .map(([key, value]) => `\\n@${key}=${value}@`)\n      .join('') + '\\n',\n  );\n  await setChatMessages([{ message_id: 0, message }], { refresh: 'affected' });\n}\n\n$(async () => {\n  eventOn(tavern_events.MESSAGE_SENT, async message_id => {\n    if (message_id === 1) {\n      initialize_based_on_user_role();\n    }\n  });\n});\n"],"names":["$","async","eventOn","tavern_events","MESSAGE_SENT","message_id","lorebook","getCharLorebooks","primary","toastr","error","default_variables","_","random","roles","getLorebookEntries","then","entries","filter","entry","comment","includes","enabled","map","replace","initialization","mergeWith","defaultTo","object_value","source_value","sample","message","getChatMessages","Object","key","value","join","setChatMessages","refresh","initialize_based_on_user_role"],"sourceRoot":""}